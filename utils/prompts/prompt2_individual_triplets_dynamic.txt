In the previous step, there were extracted triplets akin to ones in Wikidata knowledge graph from the text. Each triplet contains two entities (subject and object) and one relation that connects these subject and object. However, some of the entities and relations extracted in the previous step may have not an exact name from Wikidata. 
We linked each subject, relation, and object name with top similar exact names from the Wikidata by semantic similarity. Your task is to choose appropriate names for entities and relation that correspond to the text's context and triplet they were taken from.

The input format is following: 
    Text: <Text from the previous step for triplets extraction>

    Triplet:

        {<extracted_subject>, <extracted_relation>, <extracted_object>}
    
    Entity and relation mapping:
        {<extracted_subject>: <list of 5 exact names similar to <subject>>}
        {<extracted_relation>: <list of 5 exact names similar to <relation>>}
        {<extracted_object>: <list of 5 exact names similar to <object>>}


For the provided triplet obtained in the previous step, you will be provided with the several corresponding exact names of similar subjects, relations, and objects from the Wikidata knowledge graph.
For each subject, relation, and object from the extracted triplets, you should choose the most appropriate name from the corresponding list of exact ones that better match each triplet and the context of the previously demonstrated text.
In case the original name fits the context of the text and extracted triplet better than ANY other options from the list return None as the chosen value for this name.
In the output provide only the updated triplets in JSON format. The triplet should have fields "subject", "relation", and "object" for updated subject, relation, and object correspondingly. 

Here are some examples of previously extracted triplets with imprecise names, a list of linked exact names, and corresponding corrected outputs:

<example>
Input: 
	Text: Lexington Avenue is a thoroughfare in New York City, parallel to Park Avenue and Third Avenue.

    Triplet:
        {"subject": "Lexington Avenue", "relation": "is", "object": "thoroughfare"}
    
    Entity and relation mapping:
        {"Lexington Avenue": ["Lexington Avenue", "450 Lexington Avenue", "599 Lexington Avenue", "731 Lexington Avenue", "Lexington Park"]}
        {"is": ["represents", "instance of", "replaces", "contains", "is a list of"]}
        {"thoroughfare": ["Thoroughfare", "No Thoroughfare", "Thoroughfare Gap", "Parisian Thoroughfare", "Central Arc Thoroughfare"]}

Output: 
    {
        "subject": "Lexington Avenue",
        "relation": "instance of", 
        "object": "Thoroughfare"
    }
</example>


<example>
Input:
    Text: Józef Skrobiński was a Polish film director and member of the Association of Polish Artists and Designers, located in Warsaw, Poland.

    Triplet:
        {"subject": "Józef Skrobiński", "relation": "spoken language", "object": "Polish"}

    Entity and relation mapping:
        {"Józef Skrobiński": ["Józef Skrobiński", "Józef Żabiński", "Antoni Czubiński", "Jan Żabiński", "Bezek Dębiński"]}
        {"spoken language": ["official language", "native language", "language used", "languages spoken", "written or signed", "dialect of"]}
        {"Polish": ["Polish language", "Dialects of Polish", "Polish alphabet", "Warsaw dialect", "Polish manual alphabet"]}

Output: 
    {
        "subject": "Józef Skrobiński",
        "relation": "languages spoken, written or signed", 
        "object": "Polish language"
    }
</example>

<example>
Input: 
	Text: Lexington Avenue is a thoroughfare in New York City, parallel to Park Avenue and Third Avenue.

    Triplet:
        {"subject": "Lexington Avenue", "relation": "parallel to", "object": "Park Avenue"}
    
    Entity and relation mapping:
        {"Lexington Avenue": ["Lexington Avenue", "450 Lexington Avenue", "599 Lexington Avenue", "731 Lexington Avenue", "Lexington Park"]}
        {"parallel to": ["parallel street", "direction", "crosses", "adjacent station", "relative"]}
        {"Park Avenue": ["Park Avenue", "79 Park Avenue", "7 Park Avenue", "Park Avenue Plaza", "245 Park Avenue"]}

Output: 
    {
        "subject": "Lexington Avenue",
        "relation": "parallel street", 
        "object": "Park Avenue"
    }
</example>

<example>
Input:
    Text: Mario Griguol is an Argentine football player born in Córdoba, Argentina. He speaks Spanish and plays for Club Atlético Atlanta.

    Triplet:
        {"subject": "Mario Griguol", "relation": "sport", "object": "football"}

    Entity and relation mapping:
        {"Mario Griguol": ["Mario Griguol", "Carlos Timoteo Griguol", "Roberto Grigis", "M\u00e1rio Grman", "Mario Gromo"]}
        {"sport": ["sport", "sport number", "country for sport", "sports league level", "sports season of league or competition"]}
        {"football": ["Association football", "Football association", "The Football Association", "Football", "Association football positions"]}

Output:

    {
        "subject": "Mario Griguol",
        "relation": "sport", 
        "object": "Association football"
    }
</example>

Input:
    Text: Mario Griguol is an Argentine football player born in Córdoba, Argentina. He speaks Spanish and plays for Club Atlético Atlanta.
    
    Triplet:
        {"subject": "Mario Griguol", "relation": "citizenship", "object": "Argentina"}
    
    Entity and relation mapping:
        {"Mario Griguol": ["Mario Griguol", "Carlos Timoteo Griguol", "Roberto Grigis", "M\u00e1rio Grman", "Mario Gromo"]}
        {"citizenship": ["country of citizenship", "allegiance", "diaspora", "country of origin", "flag"]}
        {"Argentina": ["Argentina", "Norma Argentina", "Argentine Northwest", "Argentina Classic", "Argentine Islands"]}

Output:
    {
        "subject": "Mario Griguol",
        "relation": "country of citizenship", 
        "object": "Argentina"
    }
</example>

<example>
Input:
    Text: "Tahiti Honey" is an English-language film written by Frederick Kohner.

    Triplet:
        {"subject": "Tahiti Honey", "relation": "language of film", "object": "English language"}
    
    Entity and relation mapping:
        {"Tahiti Honey": ["Tahiti Honey", "Honey", "Honey Chile", "Celtic Honey", "Tahitipresse"]}
        {"language of film": ["original language of film or TV show", "language regulatory body", "language used", "native language", "dialect of"]}
        {"English language": ["English Hours", "Langueage", "English International School", "British English", "Business English"]}

Output:
    {
        "subject": "Tahiti Honey",
        "relation": "original language of film or TV show", 
        "object": "None"
    }
</example>